import pandas as pd

dict_data = {'a':1, 'b':2, 'c':3}

# 판다스 series() 함수로 딕셔너리를 시리즈로 변환, 변수 sr에 저장
sr = pd.Series(dict_data)
print(sr)
--> 
<class 'pandas.core.series.Series'>


#  데이터프레임
#  2차원 배열
#  여러 개의 열벡터(시리즈)들이 같은 행 인덱스를 기준으로 결합된 2차원 벡터 또는 행렬(matrix)
#  행과 열을 나타내기 위해서 행 인덱스와 열 이름 2가지 종류의 주소를 사용

#  열은 공통의 속성을 갖는 일련의 데이터 집합
#  행은 공통적이고 다양한 속성데이터들의 모임인 레코드

#  데이터프레임을 만들기 위해 같은 길이의 1차원 배열(Series)이 여러 개 필요
#  딕셔너리 값에 해당하는 각 리스트가 시리즈 배열로 변환되어 데이터 프레임의 열이 됨
#  딕셔너리의 키는 각 시리즈의 이름으로 변환되어 데이터 프레임의 열 이름이 됨
#  데이터프레임을 만들 때는 pandas의 DataFrame() 함수를 사용
#  딕셔너리 -> 데이터 프레임 변환: pandas.DataFrame(딕셔너리객체)


import pandas as pd

dict_data = {'c0':[1, 2, 3], 'c1':[4, 5 ,6], 'c2':[7, 8, 9], 'c3':[10, 11, 12], 'c4':[13, 14, 15]}
df = pd.DataFrame(dict_data)
print(df)
print(type(df))
-->

   c0  c1  c2  c3  c4
0   1   4   7  10  13
1   2   5   8  11  14
2   3   6   9  12  15
<class 'pandas.core.frame.DataFrame'>

# 행 인덱스/ 열 이름 변경하기
# DataFrame객체.index = 새로운 행/열 인덱스 배열 

df.index = ['도준','미미','나나','하운']
df.columns = ['연령','성별','대학교']

# rename() 함수를 사용하여 행/열 인덱스 변경 가능
# 행 인덱스 변경: DataFrame객체.rename(index = {기존 인덱스: 새 인덱스,..})
# 열 인덱스 변경: DataFrame객체.rename(columns = {기존 인덱스: 새 인덱스,..})
# inplace = True를 쓰면 기존 객체에 반영, 쓰지 않으면 기존 객체가 변경되지 않음

df.rename(index = {'도준':'승기','미미':'이진','나나':'희도','하운':'유준'})

# 행/열 삭제 시 주의 사항
# drop() 함수 사용:
# 행을 삭제 시 axis 옵션으로 axis = 0 (x축) 혹은 미입력
# 열을 삭제 시 axis = 1 (y축)

import pandas as pd

exam_data = {'국어':[95, 80, 75],'수학':[90, 85, 80], '영어':[100, 85, 90], '음악': [75, 100, 80]}
df = pd.DataFrame(exam_data, index = ['인서', '형준', '소진'])

df2 = df
df3 =df
df2.drop('인서', axis = 0)
df3.drop(['형준','소진'])

# 행/ 열 선택
# 데이터 시각화 부분에서 기준이 될 행을 선택할 수 있음
# 방법:
# 인덱스 이름 기준으로 행 선택: loc (범위의 끝 인덱스 포함*)
# 정수형 위치 인덱스 기준으로 행 선택: iloc (범위의 끝 인덱스 미포함*)




